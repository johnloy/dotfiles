[include]
  path = ~/.gitconfig_local
[push]
	default = simple
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green
[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red bold
  new = green bold
[alias]
  # Assumes installation of the following external git commands and tools in $PATH
  # - git-extras : https://github.com/tj/git-extras/blob/master/Installation.md
  # - gh cli : https://cli.github.com/manual/installation
  # - ghq : https://github.com/x-motemen/ghq
  ################################################################################

  # Repo/workspace general info
  ################################################################################
  config-aliases = !git config --get-regexp '^alias.' | sed -e \"s/^alias.//\" -e \"s/ / = /\"
  branches-default = !git symbolic-ref refs/remotes/origin/HEAD | cut -f4 -d/
  cmds-aliases = --list-cmds=alias
  cmds-external = --list-cmds=others
  cmds-builtin = --list-cmds=builtins
  cmds-porcelain = git --list-cmds=list-mainporcelain
  curr-branch = symbolic-ref --short HEAD
  curr-sha = rev-parse HEAD
  default-branch = branches-default
  ls-authors = !git authors --list | less
  ls-aliases = cmds-aliases | less
  ls-cmds-external = cmds-external
  ls-cmds-builtin = cmds-external
  sha = curr-sha

  # Contributor info
  ################################################################################
  author-info = !git log --pretty=\"%an %ae%n%cn %ce\" | sort | uniq
  contrib-count = counts-author-commits
  contributions =

  # Stats
  ################################################################################
  counts-author-commits = shortlog -sne --all

  # Helpful for grooming
  ################################################################################


  # Amend last commit
  amend = commit --amend


  authors-commits-totals = shortlog -sne --all
  diff-files-develop = diff --name-only -- `git merge-base origin/develop HEAD`
  diff-last = diff HEAD^ # diff last committed change
  changes-to-file = log -u # show changes to a file
  changes-files-in-tree = diff-tree --no-commit-id --name-only -r
  go-last-branch = checkout -
  branch-point = !bash -c 'diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | head -1' -
  branch-log = !bash -c 'git log $(git branch-point ${1:-master})..'
  branch-diff = !bash -c 'git diff $(git branch-point ${1:-master})..'
  branches-default = !git symbolic-ref refs/remotes/origin/HEAD | cut -f4 -d/
  branches-merged = !git branch --merged $(git branches-default) | egrep -v '(\\*\\s+.*|\\bdevelop|\\bmaster)$'
  branches-clean = !git branches-merged | xargs -n 1 git branch -d
  branches-last-local = for-each-ref --sort=-committerdate --count=1 --format='%(refname:short)' refs/heads/
  branches-recent-remote = !git for-each-ref --count=10 --sort=-committerdate refs/remotes --format=\"%(refname:lstrip=3)\" | grep -v 'HEAD'
  branches-tracking-remote = !git for-each-ref --format=\"%(if)%(upstream)%(then)%(refname:short) => %(upstream:short)%(end)\" | grep -E -v '^$'
  branches-last-author = for-each-ref --sort=-committerdate --count=10 --format='%(committerdate:relative)  %(authorname)  %(refname)'
  log-whenwhat = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
  log-changelog = log --pretty=format:\" * %s\"
  log-short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
  repo-root = rev-parse --show-toplevel
  repo-default-branch = !git remote show origin | grep 'HEAD branch' | cut -d ':' -f 2 | sed -e 's/^[[:space:]]*//'
  tags = tag --sort=-creatordate
  tags-last = describe --tags --abbrev=0
  undo-commit-last = reset --soft HEAD^ # go back before last commit, with files in uncommitted state
  undo-stage = reset HEAD # remove files from index (tracking)
  cmds-external = --list-cmds=others
  cmds-builtin = --list-cmds=builtins
  cmds-porcelain = git --list-cmds=list-mainporcelain
[format]
  # pretty = format:%C(blue)%ad%Creset %C(yellow)%h%C(green)%d%Creset %C(blue)%s %C(magenta) [%an]%Creset
  pretty = format:%C(bold blue)%h%C(reset)%C(dim white) %an%C(reset) %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) (reset)%C(bold yellow)%d%C(reset)
[mergetool]
  prompt = false
[merge]
  summary = true
  verbosity = 1
  tool = vimdiff
[apply]
  whitespace = nowarn
[branch]
  autosetupmerge = true
[core]
  autocrlf = false
	editor = code --wait
  excludesfile = ~/.gitignore
[advice]
  statusHints = false
[diff]
  # Git diff will use (i)ndex, (w)ork tree, (c)ommit and (o)bject
  # instead of a/b/c/d as prefixes for patches
  mnemonicprefix = true
[rerere]
  # (remember recorded resolutions) Remember my past conflict resolutions
  # http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
  enabled = true
[user]
	name = John Loy
	email = loy.john@gmail.com
[ghq]
  root = /Users/johnloy/src
[pull]
	rebase = true
[init]
	defaultBranch = main
[credential]
	helper = osxkeychain
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
